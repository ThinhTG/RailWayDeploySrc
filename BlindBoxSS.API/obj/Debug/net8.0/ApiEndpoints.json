[
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AdminController",
    "Method": "UpdateUser",
    "RelativePath": "api/Admin/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BUpdateUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AdminController",
    "Method": "GetAllAccounts",
    "RelativePath": "api/Admin/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.BlindboxController",
    "Method": "Create",
    "RelativePath": "api/Blindbox",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "blindBox",
        "Type": "Models.BlindBox",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Models.BlindBox",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.BlindboxController",
    "Method": "GetById",
    "RelativePath": "api/Blindbox/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Models.BlindBox",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.BlindboxController",
    "Method": "Update",
    "RelativePath": "api/Blindbox/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "blindBox",
        "Type": "Models.BlindBox",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.BlindboxController",
    "Method": "Delete",
    "RelativePath": "api/Blindbox/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.BlindboxController",
    "Method": "GetAll",
    "RelativePath": "api/Blindbox/getAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.BlindboxController",
    "Method": "GetAllBlindBoxes",
    "RelativePath": "api/Blindbox/GetAll-paged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/confirm-email",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BForgotPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "GoogleLogin",
    "RelativePath": "api/google-login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Services.Request.GoogleLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BUserLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderController",
    "Method": "Create",
    "RelativePath": "api/Order",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "Models.UpdateOrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Models.Order",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderController",
    "Method": "GetById",
    "RelativePath": "api/Order/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Models.Order",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderController",
    "Method": "PatchOrder",
    "RelativePath": "api/Order/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "Models.UpdateOrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderController",
    "Method": "Delete",
    "RelativePath": "api/Order/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderController",
    "Method": "GetAll",
    "RelativePath": "api/Order/getAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Models.Order, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderController",
    "Method": "GetAllAsync",
    "RelativePath": "api/Order/GetAll-paged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderDetailController",
    "Method": "AddOrderDetailAsync",
    "RelativePath": "api/OrderDetail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderDetail",
        "Type": "Models.OrderDetail",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Models.BlindBox",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderDetailController",
    "Method": "GetById",
    "RelativePath": "api/OrderDetail/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Models.OrderDetail",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderDetailController",
    "Method": "DeleteOrderDetailAsync",
    "RelativePath": "api/OrderDetail/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.OrderDetailController",
    "Method": "GetAllOrderDetailAsync",
    "RelativePath": "api/OrderDetail/getAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Models.OrderDetail, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PackageController",
    "Method": "AddPackage",
    "RelativePath": "api/Package",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "package",
        "Type": "Models.Package",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PackageController",
    "Method": "GetPackageById",
    "RelativePath": "api/Package/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PackageController",
    "Method": "UpdatePackage",
    "RelativePath": "api/Package/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "package",
        "Type": "Models.Package",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PackageController",
    "Method": "DeletePackage",
    "RelativePath": "api/Package/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PackageController",
    "Method": "GetAllPackages",
    "RelativePath": "api/Package/getAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PaymentController",
    "Method": "GetOrder",
    "RelativePath": "api/Payment/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PaymentController",
    "Method": "ConfirmWebhook",
    "RelativePath": "api/Payment/confirm-webhook",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "body",
        "Type": "Services.Request.ConfirmWebhook",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PaymentController",
    "Method": "CreatePaymentLink",
    "RelativePath": "api/Payment/createPayment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "body",
        "Type": "Services.Request.CreatePaymentLinkRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.PaymentController",
    "Method": "PayOSTransferHandler",
    "RelativePath": "api/Payment/payos_transfer_handler",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "body",
        "Type": "Net.payOS.Types.WebhookType",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "RefreshToken",
    "RelativePath": "api/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BRefreshTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BUserRegisterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "ResendConfirmEmail",
    "RelativePath": "api/resend-confirm-email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BResendConfirmEmailRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BResetPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "RevokeRefreshToken",
    "RelativePath": "api/revoke-refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "DAO.Contracts.UserRequestAndResponse\u002BRefreshTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "GetById",
    "RelativePath": "api/user/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.AuthController",
    "Method": "Delete",
    "RelativePath": "api/user/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.WalletController",
    "Method": "PaymentSuccess",
    "RelativePath": "api/Wallet/addWallet",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "amount",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.WalletController",
    "Method": "GetWallet",
    "RelativePath": "api/Wallet/getWallet",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.WalletController",
    "Method": "Purchase",
    "RelativePath": "api/Wallet/purchase",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "amount",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "orderId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.CartController",
    "Method": "GetCartByUserId",
    "RelativePath": "cart-management/managed-carts/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.CartController",
    "Method": "AddToCart",
    "RelativePath": "cart-management/managed-carts/add-to-cart",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartDto",
        "Type": "Services.DTO.CartDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.CartController",
    "Method": "DeleteCartItem",
    "RelativePath": "cart-management/managed-carts/delete/{cartId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.CartController",
    "Method": "UpdateCartItemQuantity",
    "RelativePath": "cart-management/managed-carts/update-quantity",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Services.DTO.UpdateCartItemDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BlindBoxSS.API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BlindBoxSS.API.WeatherForecast, BlindBoxSS.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]